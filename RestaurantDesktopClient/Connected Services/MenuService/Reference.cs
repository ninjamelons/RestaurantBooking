//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestaurantDesktopClient.MenuService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MenuService.IMenuService")]
    public interface IMenuService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuService/CreateMenu", ReplyAction="http://tempuri.org/IMenuService/CreateMenuResponse")]
        void CreateMenu(ModelLibrary.Menu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuService/CreateMenu", ReplyAction="http://tempuri.org/IMenuService/CreateMenuResponse")]
        System.Threading.Tasks.Task CreateMenuAsync(ModelLibrary.Menu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuService/UpdateMenu", ReplyAction="http://tempuri.org/IMenuService/UpdateMenuResponse")]
        void UpdateMenu(ModelLibrary.Menu beforeMenu, ModelLibrary.Menu afterMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuService/UpdateMenu", ReplyAction="http://tempuri.org/IMenuService/UpdateMenuResponse")]
        System.Threading.Tasks.Task UpdateMenuAsync(ModelLibrary.Menu beforeMenu, ModelLibrary.Menu afterMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuService/DeleteMenu", ReplyAction="http://tempuri.org/IMenuService/DeleteMenuResponse")]
        void DeleteMenu(ModelLibrary.Menu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuService/DeleteMenu", ReplyAction="http://tempuri.org/IMenuService/DeleteMenuResponse")]
        System.Threading.Tasks.Task DeleteMenuAsync(ModelLibrary.Menu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuService/GetAllMenusByRestaurant", ReplyAction="http://tempuri.org/IMenuService/GetAllMenusByRestaurantResponse")]
        ModelLibrary.Menu[] GetAllMenusByRestaurant(int restaurantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuService/GetAllMenusByRestaurant", ReplyAction="http://tempuri.org/IMenuService/GetAllMenusByRestaurantResponse")]
        System.Threading.Tasks.Task<ModelLibrary.Menu[]> GetAllMenusByRestaurantAsync(int restaurantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuService/GetMenu", ReplyAction="http://tempuri.org/IMenuService/GetMenuResponse")]
        ModelLibrary.Menu GetMenu(ModelLibrary.Menu menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenuService/GetMenu", ReplyAction="http://tempuri.org/IMenuService/GetMenuResponse")]
        System.Threading.Tasks.Task<ModelLibrary.Menu> GetMenuAsync(ModelLibrary.Menu menu);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMenuServiceChannel : RestaurantDesktopClient.MenuService.IMenuService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MenuServiceClient : System.ServiceModel.ClientBase<RestaurantDesktopClient.MenuService.IMenuService>, RestaurantDesktopClient.MenuService.IMenuService {
        
        public MenuServiceClient() {
        }
        
        public MenuServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MenuServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenuServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenuServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateMenu(ModelLibrary.Menu menu) {
            base.Channel.CreateMenu(menu);
        }
        
        public System.Threading.Tasks.Task CreateMenuAsync(ModelLibrary.Menu menu) {
            return base.Channel.CreateMenuAsync(menu);
        }
        
        public void UpdateMenu(ModelLibrary.Menu beforeMenu, ModelLibrary.Menu afterMenu) {
            base.Channel.UpdateMenu(beforeMenu, afterMenu);
        }
        
        public System.Threading.Tasks.Task UpdateMenuAsync(ModelLibrary.Menu beforeMenu, ModelLibrary.Menu afterMenu) {
            return base.Channel.UpdateMenuAsync(beforeMenu, afterMenu);
        }
        
        public void DeleteMenu(ModelLibrary.Menu menu) {
            base.Channel.DeleteMenu(menu);
        }
        
        public System.Threading.Tasks.Task DeleteMenuAsync(ModelLibrary.Menu menu) {
            return base.Channel.DeleteMenuAsync(menu);
        }
        
        public ModelLibrary.Menu[] GetAllMenusByRestaurant(int restaurantId) {
            return base.Channel.GetAllMenusByRestaurant(restaurantId);
        }
        
        public System.Threading.Tasks.Task<ModelLibrary.Menu[]> GetAllMenusByRestaurantAsync(int restaurantId) {
            return base.Channel.GetAllMenusByRestaurantAsync(restaurantId);
        }
        
        public ModelLibrary.Menu GetMenu(ModelLibrary.Menu menu) {
            return base.Channel.GetMenu(menu);
        }
        
        public System.Threading.Tasks.Task<ModelLibrary.Menu> GetMenuAsync(ModelLibrary.Menu menu) {
            return base.Channel.GetMenuAsync(menu);
        }
    }
}
